import { Component, EventEmitter, Input, Output, OnInit, ViewEncapsulation } from "@angular/core";
import { Router, ActivatedRoute } from "@angular/router";
import { ValidationAndVerificationPlatformService } from "../shared/services/validation-and-verification/validation-and-verification.service";
import { ChartService } from "../shared/services/chart/chart.service";

@Component({
  selector: "app-tests-detail",
  templateUrl: "./tests-detail.component.html",
  styleUrls: ["./tests-detail.component.scss"],
  encapsulation: ViewEncapsulation.None
})
export class TestsDetailComponent implements OnInit {
  loading: boolean;
  LineChart = [];
  detail = {};
  displayedColumns = ["vendor", "name", "version"];
  @Input()  name: string;
  @Output() voted = new EventEmitter<boolean>();

  constructor(
    private router: Router,
    private route: ActivatedRoute,
    private verificationAndValidationPlatformService: ValidationAndVerificationPlatformService,
    private chartService: ChartService,

  ) {}

  ngOnInit() {
    this.route.params.subscribe(params => {
      this.requestTest(params["id"]);
    });
  }

  /**
   * Generates the HTTP request of a Slices instance by UUID.
   *
   * @param uuid ID of the selected instance to be displayed.
   * Comming from the route.
   */

  requestTest(uuid) {
    this.loading = true;
    this.verificationAndValidationPlatformService
      .getOneTest(uuid)
      .then(response => {
        this.loading = false;
        this.detail = response[0];
        let data = response[0]["test"];
        let latency_in_microseconds = [];
        let percentile = [];
        for (var i = 0; i < data.length; i++) {
          latency_in_microseconds.push(data[i].latency_in_microseconds);
          percentile.push(data[i].percentile);
        }

        // let data = response["server"][0]["details"]["latency_distribution"];

        // for (var i = 0; i < data.length; i++) {
        //   latency_in_microseconds.push(data[i].latency_in_microseconds);
        //   percentile.push(data[i].percentile);
        // }
        
        // let latency_in_microseconds = [];
        // let percentile = [];

        // for (var i = 0; i < data.length; i++) {
        //   latency_in_microseconds.push(data[i].latency_in_microseconds);
        //   percentile.push(data[i].percentile);
        // }

        this.chartService.chartBar(latency_in_microseconds, percentile)

      })
      .catch(err => console.error(err));
  }

  close() {
    this.router.navigate(["validation-and-verification/tests"]);
  }

}
