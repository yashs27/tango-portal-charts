import { Component, OnInit, ViewEncapsulation } from "@angular/core";
import { Router, ActivatedRoute } from "@angular/router";
import { ValidationAndVerificationPlatformService } from "../validation-and-verification.service";
import { ChartService } from "../chart/chart.service";

@Component({
  selector: "app-tests-detail",
  templateUrl: "./tests-detail.component.html",
  styleUrls: ["./tests-detail.component.scss"],
  encapsulation: ViewEncapsulation.None
})
export class TestsDetailComponent implements OnInit {
  loading: boolean;
  detail = {};
  displayedColumns = ["vendor", "name", "version"];

  constructor(
    private router: Router,
    private route: ActivatedRoute,
    private verificationAndValidationPlatformService: ValidationAndVerificationPlatformService,
    private chartService: ChartService,
  ) {}

  ngOnInit() {
    this.route.params.subscribe(params => {
      this.requestTest(params["id"]);
      this.requestTestResult();
    });
  }

  /**
   * Generates the HTTP request of a Slices instance by UUID.
   *
   * @param uuid ID of the selected instance to be displayed.
   *             Comming from the route.
   */
  requestTest(uuid) {
    this.loading = true;
    this.verificationAndValidationPlatformService
      .getOneTest(uuid)
      .then(response => {
        this.loading = false;
        this.detail = response;
      })
      .catch(err => console.error(err));
  }
  requestTestResult() {                                              // ! charts 
    this.loading = true;
    this.verificationAndValidationPlatformService
      .getRslTest()
      .then(response => {
        this.loading = false;
        let test2 = response;
        console.log('​TestsDetailComponent -> requestTestResult -> response', response["graphs-title"]);
        
        // let test = response["graphs"];
        // let element = document.getElementById("multychart");
        // console.log('​TestsDetailComponent -> requestTestResult -> element', element);
        // element.appendChild(document.createElement('<canvas height="140" id="lineChart"></canvas>'));

        // for (var i = 0; i < test.length; i++) {
          // console.log('​TestsDetailComponent -> requestTestResult -> ', test[i]["data"] );
          // console.log('​TestsDetailComponent -> requestTestResult -> ', test[i]["x-axis-title"] );
        // }

        let data = response["data"],
        title = response["graphs-title"],
        xAxis = {
          title: response["x-axis-title"], // data["x-axis-title"]  
          data: [],
        },
        yAxis = {
          title: response["y-axis-title"], // data["x-axis-title"]
          data: [],
        };

        for (var j = 0; j < data.length; j++) {
          xAxis["data"].push(data[j]["x-axis"]);
          yAxis["data"].push(data[j]["y-axis"]);
        }

        this.chartService.chartBar(title, xAxis["title"], xAxis["data"],yAxis["title"], yAxis["data"]);  

      })


      .catch(err => console.error(err));
  }
  close() { this.router.navigate(["validation-and-verification/tests"]); }
}
